"use strict";(self.webpackChunkmesto_project=self.webpackChunkmesto_project||[]).push([[179],{84:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"x\": () => (/* binding */ userId)\n});\n\n;// CONCATENATED MODULE: ./src/utils/config.js\nconst validationConfig = {\r\n  formValidateSelector: '.validate',\r\n  formSelector: '.form',\r\n  inputSelector: '.form__input',\r\n  submitButtonSelector: '.form__submit',\r\n  inactiveButtonClass: 'button_disabled',\r\n  inputErrorClass: 'form__input_type_error',\r\n  errorElementSelector: '.form__input-error',\r\n  errorElementClassActive: 'form__input-error_active',\r\n};\r\n\r\nconst serverConfig = {\r\n  baseUrl: `${\"https://mesto.nomoreparties.co\"}/v1/${\"plus-cohort-19\"}`,\r\n  headers: {\r\n    authorization: \"39aa7ad8-990f-4e9e-9973-d0685d4f164f\",\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/components/api.js\n\nvar getResponse = function getResponse(res) {\n  return res.ok ? res.json() : Promise.reject({\n    status: res.status,\n    statusText: res.statusText\n  });\n};\nfunction getUserInfo() {\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/users/me\"), {\n    headers: serverConfig.headers\n  }).then(getResponse);\n}\nfunction setUserInfo(_ref) {\n  var name = _ref.name,\n    about = _ref.about;\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: serverConfig.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(getResponse);\n}\nfunction setUserAvatar(avatar) {\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: serverConfig.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(getResponse);\n}\nfunction getCards() {\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/cards\"), {\n    headers: serverConfig.headers\n  }).then(getResponse);\n}\nfunction addCard(_ref2) {\n  var name = _ref2.name,\n    link = _ref2.link;\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: serverConfig.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(getResponse);\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: serverConfig.headers\n  }).then(getResponse);\n}\nfunction toggleLike(cardId, isLiked) {\n  return fetch(\"\".concat(serverConfig.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: isLiked ? 'DELETE' : 'PUT',\n    headers: serverConfig.headers\n  }).then(getResponse);\n}\n;// CONCATENATED MODULE: ./src/utils/constants.js\nconst content = document.querySelector('.content');\r\nconst cardsContainer = content.querySelector('.photo-grid');\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst errorTemplate = document.querySelector(\r\n  '#form-input-error-template'\r\n).content;\r\n\r\n// DOM elements\r\nconst avatarContainer = content.querySelector('.profile__avatar');\r\nconst profileAvatar = content.querySelector('.profile__avatar-img');\r\nconst btnOpenPopupEditProfile =\r\n  content.querySelector('.profile__edit-btn');\r\nconst btnOpenPopupAddCard = content.querySelector('.profile__add-btn');\r\nconst profileName = content.querySelector('.profile__name');\r\nconst profileAbout = content.querySelector('.profile__about');\r\n\r\nconst submitButtonSelector = '.form__submit';\r\nconst formSelector = '.form';\r\nconst submitButtonTextSelector = '.button__text';\r\nconst ellipsisContainerSelector = '.ellipsis';\r\nconst ellipsisClass = 'animated-ellipsis';\r\n\r\nconst photoGridItemSelector = '.photo-grid__item';\r\nconst cardSelector = '.card';\r\nconst cardImageSelector = '.card__img';\r\nconst cardTitleSelector = '.card__title';\r\nconst cardLikeSelector = '.card__like-btn';\r\nconst cardLikeCountSelector = '.card__like-count';\r\nconst cardLikeActiveClass = 'card__like-btn_active';\r\nconst cardLikeWithCountClass = 'card__like-btn_with-count';\r\nconst cardDeleteSelector = '.card__delete-btn';\r\n\r\n// popups\r\nconst popupOpenedClass = 'popup_opened';\r\nconst popupOpenedSelector = '.popup_opened';\r\nconst popupCloseBtnClass = 'popup__close-btn';\r\nconst popupEditAvatar = document.querySelector(\r\n  '.popup_type_edit-avatar'\r\n);\r\nconst popupEditProfile = document.querySelector(\r\n  '.popup_type_edit-profile'\r\n);\r\nconst popupAddCard = document.querySelector('.popup_type_add-card');\r\nconst popupCard = document.querySelector('.popup_type_image');\r\nconst popupConfirmDelete = document.querySelector(\r\n  '.popup_type_confirm-delete'\r\n);\r\nconst cardPopupImage = popupCard.querySelector('.popup__image');\r\nconst cardPopupTitle = popupCard.querySelector('.popup__image-title');\r\n\r\n// forms\r\nconst formAddCard = document.querySelector('.add-card-form');\r\nconst formEditProfile = document.querySelector('.edit-profile-form');\r\nconst nameInput = document.querySelector('#name');\r\nconst aboutInput = document.querySelector('#about');\r\nconst formEditAvatar = document.querySelector('.edit-avatar-form');\r\nconst avatarInput = document.querySelector('#avatar-link');\r\nconst formConfirmDelete = document.querySelector('.confirm-delete-form');\r\n\n;// CONCATENATED MODULE: ./src/utils/utils.js\n\r\n\r\n\r\n\r\nfunction getFormInputValues(form) {\r\n  const formData = new FormData(form);\r\n  const formProps = Object.fromEntries(formData);\r\n  return formProps;\r\n}\r\n\r\nfunction getErrorElement(form, input) {\r\n  return form.querySelector(`.${input.id}-error`);\r\n}\r\n\r\nfunction getFormInputs(form) {\r\n  const inputs = Array.from(form.querySelectorAll('input'));\r\n\r\n  const inputsForValidate = inputs.filter((input) => {\r\n    return (\r\n      !input.disabled &&\r\n      input.type !== 'file' &&\r\n      input.type !== 'reset' &&\r\n      input.type !== 'submit' &&\r\n      input.type !== 'button'\r\n    );\r\n  });\r\n\r\n  return inputsForValidate;\r\n}\r\n\r\nfunction removeInputErrors(form) {\r\n  const inputs = getFormInputs(form);\r\n\r\n  inputs.forEach((input) => {\r\n    const errorElement = getErrorElement(form, input);\r\n    if (errorElement) {\r\n      errorElement.remove();\r\n    }\r\n  });\r\n}\r\n\r\nfunction setButtonState(button, isFormValid) {\r\n  if (isFormValid) {\r\n    button.removeAttribute('disabled');\r\n    button.classList.remove(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    button.setAttribute('disabled', true);\r\n    button.classList.add(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nfunction showButtonLoadingEllipsis(button, text) {\r\n  const submitButtonText = button.querySelector(submitButtonTextSelector);\r\n  const loadingEllipsis = button.querySelector(ellipsisContainerSelector);\r\n  submitButtonText.textContent = text;\r\n  loadingEllipsis.classList.add(ellipsisClass);\r\n}\r\n\r\nfunction hideButtonLoadingEllipsis(button, text) {\r\n  const submitButtonText = button.querySelector(submitButtonTextSelector);\r\n  const loadingEllipsis = button.querySelector(ellipsisContainerSelector);\r\n  submitButtonText.textContent = text;\r\n  loadingEllipsis.classList.remove(ellipsisClass);\r\n}\r\n\r\nfunction getPopupElement(button) {\r\n  const popupSelector = `.${button.dataset.popup}`;\r\n  return document.querySelector(popupSelector);\r\n}\r\n\r\nfunction loadImage(url) {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onerror = () => reject(url);\r\n    img.onload = () => resolve(url);\r\n  });\r\n}\r\n\r\nfunction confirmSubmit(form) {\r\n  return new Promise((res, rej) => {});\r\n}\r\n\n;// CONCATENATED MODULE: ./src/components/modal.js\n\nfunction openPopup(popup) {\n  popup.classList.add(popupOpenedClass);\n  setPopupCloseListeners();\n}\nfunction closePopup(popup) {\n  popup.classList.remove(popupOpenedClass);\n  removePopupCloseListeners();\n}\nvar handlePopupCloseClick = function handlePopupCloseClick(evt) {\n  var classList = evt.target.classList;\n  if (classList.contains(popupCloseBtnClass) || classList.contains(popupOpenedClass)) {\n    var openedPopup = document.querySelector(popupOpenedSelector);\n    closePopup(openedPopup);\n  }\n};\nvar handlePopupCloseEsc = function handlePopupCloseEsc(evt) {\n  var openedPopup = document.querySelector(popupOpenedSelector);\n  if (openedPopup && evt.key === 'Escape') {\n    closePopup(openedPopup);\n  }\n};\nfunction setPopupCloseListeners() {\n  document.addEventListener('mousedown', handlePopupCloseClick);\n  document.addEventListener('keydown', handlePopupCloseEsc);\n}\nfunction removePopupCloseListeners() {\n  document.removeEventListener('mousedown', handlePopupCloseClick);\n  document.removeEventListener('keydown', handlePopupCloseEsc);\n}\n\n// =========== confirm delete popup\n\nfunction openConfirmPopup(popup, collbackConfirmSubmit) {\n  popup.classList.add(popupOpenedClass);\n  setConfirmCloseListeners(popup, collbackConfirmSubmit);\n}\nfunction closeConfirmPopup(popup, collbackConfirmSubmit) {\n  popup.classList.remove(popupOpenedClass);\n  removeConfirmCloseListeners(popup, collbackConfirmSubmit);\n}\nfunction setConfirmCloseListeners(popup, collbackConfirmSubmit) {\n  document.addEventListener('mousedown', function (evt) {\n    return handleConfirmPopupCloseClick(evt, popup, collbackConfirmSubmit);\n  });\n  document.addEventListener('keydown', function (evt) {\n    return handleConfirmPopupCloseEsc(evt, popup, collbackConfirmSubmit);\n  });\n}\nfunction removeConfirmCloseListeners(popup, collbackConfirmSubmit) {\n  document.removeEventListener('mousedown', function () {\n    return handleConfirmPopupCloseClick(popup, collbackConfirmSubmit);\n  });\n  document.removeEventListener('keydown', function () {\n    return handleConfirmPopupCloseEsc(popup, collbackConfirmSubmit);\n  });\n}\nfunction handleConfirmPopupCloseClick(evt, popup, collbackConfirmSubmit) {\n  var classList = evt.target.classList;\n  if (classList.contains(popupCloseBtnClass) || classList.contains(popupOpenedClass)) {\n    popup.querySelector(formSelector).removeEventListener('submit', collbackConfirmSubmit);\n    closeConfirmPopup(popup);\n  }\n}\nfunction handleConfirmPopupCloseEsc(evt, popup, collbackConfirmSubmit) {\n  if (popup && evt.key === 'Escape') {\n    popup.querySelector(formSelector).removeEventListener('submit', collbackConfirmSubmit);\n    closeConfirmPopup(popup);\n  }\n}\n\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\n\nfunction isOwnerLiked(card) {\n  return card.likes.some(function (like) {\n    return like._id === userId;\n  });\n}\nfunction isHasLikes(card) {\n  return card.likes.length > 0;\n}\nfunction generateCardElement(card) {\n  var listElement = cardTemplate.querySelector(photoGridItemSelector).cloneNode(true);\n  listElement.setAttribute('data-card-id', card._id);\n  var cardElement = listElement.querySelector(cardSelector);\n  var cardImage = cardElement.querySelector(cardImageSelector);\n  cardImage.src = card.link;\n  cardImage.alt = \"\".concat(card.name, \".\");\n  cardElement.querySelector(cardTitleSelector).textContent = card.name;\n\n  // card popup with image listener\n  cardImage.addEventListener('click', function (evt) {\n    var cardImage = evt.target;\n    var cardElement = evt.target.closest(cardSelector);\n    var cardTitle = cardElement.querySelector(cardTitleSelector);\n    cardPopupImage.src = cardImage.src;\n    cardPopupImage.alt = \"\".concat(cardTitle.textContent, \".\");\n    cardPopupTitle.textContent = cardTitle.textContent;\n    openPopup(popupCard);\n  });\n\n  // like button\n  var cardLikeBtn = cardElement.querySelector(cardLikeSelector);\n  var cardLikeCount = cardElement.querySelector(cardLikeCountSelector);\n  var cardDeleteBtn = cardElement.querySelector(cardDeleteSelector);\n  function renderLikeCount(card) {\n    card.likes.length !== 0 ? cardLikeCount.textContent = card.likes.length : cardLikeCount.textContent = '';\n  }\n  if (isHasLikes(card)) {\n    renderLikeCount(card);\n    cardLikeBtn.classList.add(cardLikeWithCountClass);\n  }\n  isOwnerLiked(card) ? cardLikeBtn.classList.add(cardLikeActiveClass) : null;\n  var handleLikeClick = function handleLikeClick(evt) {\n    toggleLike(card._id, isOwnerLiked(card)).then(function (data) {\n      card = data;\n      var likeButton = evt.target;\n      likeButton.classList.toggle(cardLikeActiveClass);\n      card.likes.length !== 0 ? likeButton.classList.add(cardLikeWithCountClass) : likeButton.classList.remove(cardLikeWithCountClass);\n      renderLikeCount(card);\n    }).catch(function (err) {\n      console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u043B\\u0430\\u0439\\u043A\\u0430 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \").concat(err.statusText));\n    });\n  };\n  cardLikeBtn.addEventListener('click', handleLikeClick);\n\n  // delete button\n  var handleConfirmDeleteSubmit = function handleConfirmDeleteSubmit(evt) {\n    evt.preventDefault();\n    var submitButton = evt.submitter;\n    var deletedCardElement = document.querySelector(\"[data-card-id=\\\"\".concat(card._id, \"\\\"]\"));\n    showButtonLoadingEllipsis(submitButton, 'Удаление');\n    deleteCard(card._id).then(function () {\n      deletedCardElement.remove();\n      closeConfirmPopup(popupConfirmDelete, handleConfirmDeleteSubmit);\n      hideButtonLoadingEllipsis(submitButton, 'Да');\n    }).catch(function (err) {\n      console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \").concat(err.statusText));\n    });\n  };\n\n  // check card owner === account owner to display delete button\n  card.owner._id === userId ? cardDeleteBtn.addEventListener('click', function () {\n    formConfirmDelete.addEventListener('submit', handleConfirmDeleteSubmit, {\n      once: true\n    });\n    openConfirmPopup(popupConfirmDelete, handleConfirmDeleteSubmit);\n  }) : cardDeleteBtn.remove();\n  return listElement;\n}\nfunction renderCard(cardElement, cardsContainer) {\n  cardsContainer.prepend(cardElement);\n}\n\n;// CONCATENATED MODULE: ./src/components/validate.js\n\n\n\nfunction enableValidation(validationConfig) {\n  var forms = Array.from(document.querySelectorAll(validationConfig.formValidateSelector));\n  forms.forEach(function (form) {\n    return setFormEventListeners(form);\n  });\n  function showInputError(form, input, message) {\n    var errorElement = getErrorElement(form, input);\n    errorElement.textContent = message;\n    errorElement.classList.add(validationConfig.errorElementClassActive);\n    input.classList.add(validationConfig.inputErrorClass);\n    input.setAttribute('aria-describedby', \"\".concat(input.id, \"-error\"));\n  }\n  function hideInputError(form, input) {\n    var errorElement = getErrorElement(form, input);\n    input.classList.remove(validationConfig.inputErrorClass);\n    input.removeAttribute('aria-describedby');\n    errorElement.classList.remove(validationConfig.errorElementClassActive);\n    errorElement.textContent = '';\n  }\n  function handleFormInput(form, input) {\n    var errorElement = input.parentNode.querySelector(validationConfig.errorElementSelector);\n    input.validity.patternMismatch ? input.setCustomValidity(input.dataset.errorMessage) : input.setCustomValidity('');\n    if (!input.validity.valid) {\n      // if no error element -> create error DOM node and then show\n      if (!errorElement) {\n        var _errorElement = generateErrorForInput(input);\n        input.parentNode.insertBefore(_errorElement, input.nextSibling);\n      }\n      showInputError(form, input, input.validationMessage);\n    } else {\n      if (errorElement) {\n        hideInputError(form, input);\n      }\n    }\n  }\n  function setFormEventListeners(form) {\n    var inputs = getFormInputs(form);\n    var submitButton = form.querySelector(validationConfig.submitButtonSelector);\n    inputs.forEach(function (input) {\n      input.addEventListener('input', function () {\n        handleFormInput(form, input);\n        setButtonState(submitButton, isFormValid(form));\n      });\n    });\n  }\n}\nfunction isFormValid(form) {\n  var inputs = getFormInputs(form);\n  return inputs.every(function (input) {\n    return input.validity.valid;\n  });\n}\nfunction generateErrorForInput(input) {\n  var errorElement = errorTemplate.querySelector(validationConfig.errorElementSelector).cloneNode(true);\n  errorElement.classList.add(\"\".concat(input.id, \"-error\"));\n  return errorElement;\n}\n;// CONCATENATED MODULE: ./src/components/index.js\n\n\n\n\n\n\n\n\nvar userId;\nfunction renderInitialPage() {\n  getUserInfo().then(function (user) {\n    updateUserInfo(user);\n    renderInitialCards();\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F: \").concat(err.statusText));\n  });\n}\nfunction updateUserInfo(user) {\n  profileAbout.textContent = user.about;\n  profileName.textContent = user.name;\n  profileAvatar.src = user.avatar;\n  userId = user._id;\n}\nfunction renderInitialCards() {\n  getCards().then(function (cards) {\n    cards.reverse().forEach(function (card) {\n      renderCard(generateCardElement(card), cardsContainer);\n    });\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u0435\\u043A: \").concat(err.statusText));\n  });\n}\n\n//=============== Form events =====================================\n\nvar handleEditProfileSubmit = function handleEditProfileSubmit(evt) {\n  evt.preventDefault();\n  var submitButton = evt.target.querySelector(submitButtonSelector);\n  showButtonLoadingEllipsis(submitButton, 'Сохранение');\n  var form = evt.target;\n  var _getFormInputValues = getFormInputValues(form),\n    name = _getFormInputValues.name,\n    about = _getFormInputValues.about;\n  setUserInfo({\n    name: name,\n    about: about\n  }).then(function (user) {\n    updateUserInfo(user);\n    closePopup(popupEditProfile);\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F: \").concat(err.statusText));\n  }).finally(function () {\n    hideButtonLoadingEllipsis(submitButton, 'Сохранить');\n  });\n};\nvar handleAddCardSubmit = function handleAddCardSubmit(evt) {\n  evt.preventDefault();\n  var submitButton = evt.target.querySelector(submitButtonSelector);\n  showButtonLoadingEllipsis(submitButton, 'Создание');\n  var _getFormInputValues2 = getFormInputValues(formAddCard),\n    name = _getFormInputValues2.name,\n    link = _getFormInputValues2.link;\n  addCard({\n    name: name,\n    link: link\n  }).then(function (card) {\n    var newCard = generateCardElement(card);\n    renderCard(newCard, cardsContainer);\n    formAddCard.reset();\n    closePopup(popupAddCard);\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(err.status, \" \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438: \").concat(err.statusText));\n  }).finally(function () {\n    hideButtonLoadingEllipsis(submitButton, 'Создать');\n  });\n};\nvar handleEditAvatarSubmit = function handleEditAvatarSubmit(evt) {\n  evt.preventDefault();\n  var submitButton = evt.target.querySelector(submitButtonSelector);\n  showButtonLoadingEllipsis(submitButton, 'Сохранение');\n  loadImage(avatarInput.value).then(function (url) {\n    setUserAvatar(url).then(function (user) {\n      updateUserInfo(user);\n      formEditAvatar.reset();\n      closePopup(popupEditAvatar);\n    }).catch(function (err) {\n      console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u0430 \".concat(err.status, \": \").concat(err.statusText));\n    });\n  }).catch(function (url) {\n    console.log(\"image not found for url \".concat(url));\n  }).finally(function () {\n    hideButtonLoadingEllipsis(submitButton, 'Сохранить');\n  });\n};\nformEditProfile.addEventListener('submit', handleEditProfileSubmit);\nformAddCard.addEventListener('submit', handleAddCardSubmit);\nformEditAvatar.addEventListener('submit', handleEditAvatarSubmit);\n\n// ============== popup events ======================================\nvar handleOpenPopupWithForm = function handleOpenPopupWithForm(evt) {\n  var popup = getPopupElement(evt.target);\n  var form = popup.querySelector(validationConfig.formSelector);\n  var submitButton = popup.querySelector(validationConfig.submitButtonSelector);\n  removeInputErrors(form);\n  openPopup(popup);\n  setButtonState(submitButton, isFormValid(form));\n};\nbtnOpenPopupEditProfile.addEventListener('click', function (evt) {\n  nameInput.value = profileName.textContent;\n  aboutInput.value = profileAbout.textContent;\n  handleOpenPopupWithForm(evt);\n});\nbtnOpenPopupAddCard.addEventListener('click', handleOpenPopupWithForm);\navatarContainer.addEventListener('click', handleOpenPopupWithForm);\n\n// ====================================\n\nrenderInitialPage();\nenableValidation(validationConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUVBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekRBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyRkE7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBOzs7QUNoR0E7QUFpQkE7QUFLQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFHQTtBQUFBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQzVJQTtBQUVBO0FBTUE7QUFFQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7O0FDdkZBO0FBRUE7QUFRQTtBQVVBO0FBRUE7QUFFQTtBQW9CQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7O0FBRUE7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvdXRpbHMvY29uZmlnLmpzPzAxZWEiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2FwaS5qcz84NjgwIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzP2M5ZDkiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy91dGlscy91dGlscy5qcz9mYTdkIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9tb2RhbC5qcz82Y2ZhIiwid2VicGFjazovL21lc3RvLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9jYXJkLmpzPzI0YzMiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3ZhbGlkYXRlLmpzP2VkZDkiLCJ3ZWJwYWNrOi8vbWVzdG8tcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2luZGV4LmpzPzJhZjkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICBmb3JtVmFsaWRhdGVTZWxlY3RvcjogJy52YWxpZGF0ZScsXHJcbiAgZm9ybVNlbGVjdG9yOiAnLmZvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcuZm9ybV9faW5wdXQnLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLmZvcm1fX3N1Ym1pdCcsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ2J1dHRvbl9kaXNhYmxlZCcsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAnZm9ybV9faW5wdXRfdHlwZV9lcnJvcicsXHJcbiAgZXJyb3JFbGVtZW50U2VsZWN0b3I6ICcuZm9ybV9faW5wdXQtZXJyb3InLFxyXG4gIGVycm9yRWxlbWVudENsYXNzQWN0aXZlOiAnZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlJyxcclxufTtcclxuXHJcbmNvbnN0IHNlcnZlckNvbmZpZyA9IHtcclxuICBiYXNlVXJsOiBgJHtwcm9jZXNzLmVudi5IT1NUfS92MS8ke3Byb2Nlc3MuZW52LkdST1VQX0lEfWAsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogcHJvY2Vzcy5lbnYuQUNDRVNTX1RPS0VOLFxyXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IHsgdmFsaWRhdGlvbkNvbmZpZywgc2VydmVyQ29uZmlnIH07XHJcbiIsImltcG9ydCB7IHNlcnZlckNvbmZpZyB9IGZyb20gJy4uL3V0aWxzL2NvbmZpZyc7XHJcblxyXG5jb25zdCBnZXRSZXNwb25zZSA9IChyZXMpID0+IHtcclxuICByZXR1cm4gcmVzLm9rXHJcbiAgICA/IHJlcy5qc29uKClcclxuICAgIDogUHJvbWlzZS5yZWplY3QoeyBzdGF0dXM6IHJlcy5zdGF0dXMsIHN0YXR1c1RleHQ6IHJlcy5zdGF0dXNUZXh0IH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJJbmZvKCkge1xyXG4gIHJldHVybiBmZXRjaChgJHtzZXJ2ZXJDb25maWcuYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICBoZWFkZXJzOiBzZXJ2ZXJDb25maWcuaGVhZGVycyxcclxuICB9KS50aGVuKGdldFJlc3BvbnNlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xyXG4gIHJldHVybiBmZXRjaChgJHtzZXJ2ZXJDb25maWcuYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICBoZWFkZXJzOiBzZXJ2ZXJDb25maWcuaGVhZGVycyxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgbmFtZSxcclxuICAgICAgYWJvdXQsXHJcbiAgICB9KSxcclxuICB9KS50aGVuKGdldFJlc3BvbnNlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFVzZXJBdmF0YXIoYXZhdGFyKSB7XHJcbiAgcmV0dXJuIGZldGNoKGAke3NlcnZlckNvbmZpZy5iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICBoZWFkZXJzOiBzZXJ2ZXJDb25maWcuaGVhZGVycyxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgYXZhdGFyLFxyXG4gICAgfSksXHJcbiAgfSkudGhlbihnZXRSZXNwb25zZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRDYXJkcygpIHtcclxuICByZXR1cm4gZmV0Y2goYCR7c2VydmVyQ29uZmlnLmJhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgaGVhZGVyczogc2VydmVyQ29uZmlnLmhlYWRlcnMsXHJcbiAgfSkudGhlbihnZXRSZXNwb25zZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRDYXJkKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgcmV0dXJuIGZldGNoKGAke3NlcnZlckNvbmZpZy5iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgaGVhZGVyczogc2VydmVyQ29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIGxpbmssXHJcbiAgICB9KSxcclxuICB9KS50aGVuKGdldFJlc3BvbnNlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgcmV0dXJuIGZldGNoKGAke3NlcnZlckNvbmZpZy5iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgaGVhZGVyczogc2VydmVyQ29uZmlnLmhlYWRlcnMsXHJcbiAgfSkudGhlbihnZXRSZXNwb25zZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVMaWtlKGNhcmRJZCwgaXNMaWtlZCkge1xyXG4gIHJldHVybiBmZXRjaChgJHtzZXJ2ZXJDb25maWcuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgbWV0aG9kOiBpc0xpa2VkID8gJ0RFTEVURScgOiAnUFVUJyxcclxuICAgIGhlYWRlcnM6IHNlcnZlckNvbmZpZy5oZWFkZXJzLFxyXG4gIH0pLnRoZW4oZ2V0UmVzcG9uc2UpO1xyXG59XHJcbiIsImV4cG9ydCBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRzQ29udGFpbmVyID0gY29udGVudC5xdWVyeVNlbGVjdG9yKCcucGhvdG8tZ3JpZCcpO1xyXG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NhcmQtdGVtcGxhdGUnKS5jb250ZW50O1xyXG5leHBvcnQgY29uc3QgZXJyb3JUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgJyNmb3JtLWlucHV0LWVycm9yLXRlbXBsYXRlJ1xyXG4pLmNvbnRlbnQ7XHJcblxyXG4vLyBET00gZWxlbWVudHNcclxuZXhwb3J0IGNvbnN0IGF2YXRhckNvbnRhaW5lciA9IGNvbnRlbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhciA9IGNvbnRlbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1pbWcnKTtcclxuZXhwb3J0IGNvbnN0IGJ0bk9wZW5Qb3B1cEVkaXRQcm9maWxlID1cclxuICBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ0bicpO1xyXG5leHBvcnQgY29uc3QgYnRuT3BlblBvcHVwQWRkQ2FyZCA9IGNvbnRlbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idG4nKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lID0gY29udGVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUFib3V0ID0gY29udGVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWJvdXQnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBzdWJtaXRCdXR0b25TZWxlY3RvciA9ICcuZm9ybV9fc3VibWl0JztcclxuZXhwb3J0IGNvbnN0IGZvcm1TZWxlY3RvciA9ICcuZm9ybSc7XHJcbmV4cG9ydCBjb25zdCBzdWJtaXRCdXR0b25UZXh0U2VsZWN0b3IgPSAnLmJ1dHRvbl9fdGV4dCc7XHJcbmV4cG9ydCBjb25zdCBlbGxpcHNpc0NvbnRhaW5lclNlbGVjdG9yID0gJy5lbGxpcHNpcyc7XHJcbmV4cG9ydCBjb25zdCBlbGxpcHNpc0NsYXNzID0gJ2FuaW1hdGVkLWVsbGlwc2lzJztcclxuXHJcbmV4cG9ydCBjb25zdCBwaG90b0dyaWRJdGVtU2VsZWN0b3IgPSAnLnBob3RvLWdyaWRfX2l0ZW0nO1xyXG5leHBvcnQgY29uc3QgY2FyZFNlbGVjdG9yID0gJy5jYXJkJztcclxuZXhwb3J0IGNvbnN0IGNhcmRJbWFnZVNlbGVjdG9yID0gJy5jYXJkX19pbWcnO1xyXG5leHBvcnQgY29uc3QgY2FyZFRpdGxlU2VsZWN0b3IgPSAnLmNhcmRfX3RpdGxlJztcclxuZXhwb3J0IGNvbnN0IGNhcmRMaWtlU2VsZWN0b3IgPSAnLmNhcmRfX2xpa2UtYnRuJztcclxuZXhwb3J0IGNvbnN0IGNhcmRMaWtlQ291bnRTZWxlY3RvciA9ICcuY2FyZF9fbGlrZS1jb3VudCc7XHJcbmV4cG9ydCBjb25zdCBjYXJkTGlrZUFjdGl2ZUNsYXNzID0gJ2NhcmRfX2xpa2UtYnRuX2FjdGl2ZSc7XHJcbmV4cG9ydCBjb25zdCBjYXJkTGlrZVdpdGhDb3VudENsYXNzID0gJ2NhcmRfX2xpa2UtYnRuX3dpdGgtY291bnQnO1xyXG5leHBvcnQgY29uc3QgY2FyZERlbGV0ZVNlbGVjdG9yID0gJy5jYXJkX19kZWxldGUtYnRuJztcclxuXHJcbi8vIHBvcHVwc1xyXG5leHBvcnQgY29uc3QgcG9wdXBPcGVuZWRDbGFzcyA9ICdwb3B1cF9vcGVuZWQnO1xyXG5leHBvcnQgY29uc3QgcG9wdXBPcGVuZWRTZWxlY3RvciA9ICcucG9wdXBfb3BlbmVkJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwQ2xvc2VCdG5DbGFzcyA9ICdwb3B1cF9fY2xvc2UtYnRuJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgJy5wb3B1cF90eXBlX2VkaXQtYXZhdGFyJ1xyXG4pO1xyXG5leHBvcnQgY29uc3QgcG9wdXBFZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgJy5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZSdcclxuKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQWRkQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2FkZC1jYXJkJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9pbWFnZScpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBDb25maXJtRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAnLnBvcHVwX3R5cGVfY29uZmlybS1kZWxldGUnXHJcbik7XHJcbmV4cG9ydCBjb25zdCBjYXJkUG9wdXBJbWFnZSA9IHBvcHVwQ2FyZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XHJcbmV4cG9ydCBjb25zdCBjYXJkUG9wdXBUaXRsZSA9IHBvcHVwQ2FyZC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlLXRpdGxlJyk7XHJcblxyXG4vLyBmb3Jtc1xyXG5leHBvcnQgY29uc3QgZm9ybUFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWNhcmQtZm9ybScpO1xyXG5leHBvcnQgY29uc3QgZm9ybUVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVkaXQtcHJvZmlsZS1mb3JtJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmFtZScpO1xyXG5leHBvcnQgY29uc3QgYWJvdXRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhYm91dCcpO1xyXG5leHBvcnQgY29uc3QgZm9ybUVkaXRBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWRpdC1hdmF0YXItZm9ybScpO1xyXG5leHBvcnQgY29uc3QgYXZhdGFySW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXZhdGFyLWxpbmsnKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1Db25maXJtRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbmZpcm0tZGVsZXRlLWZvcm0nKTtcclxuIiwiaW1wb3J0IHsgdmFsaWRhdGlvbkNvbmZpZyB9IGZyb20gJy4vY29uZmlnLmpzJztcclxuXHJcbmltcG9ydCB7XHJcbiAgZWxsaXBzaXNDbGFzcyxcclxuICBlbGxpcHNpc0NvbnRhaW5lclNlbGVjdG9yLFxyXG4gIHN1Ym1pdEJ1dHRvblRleHRTZWxlY3RvcixcclxufSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Rm9ybUlucHV0VmFsdWVzKGZvcm0pIHtcclxuICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShmb3JtKTtcclxuICBjb25zdCBmb3JtUHJvcHMgPSBPYmplY3QuZnJvbUVudHJpZXMoZm9ybURhdGEpO1xyXG4gIHJldHVybiBmb3JtUHJvcHM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvckVsZW1lbnQoZm9ybSwgaW5wdXQpIHtcclxuICByZXR1cm4gZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZvcm1JbnB1dHMoZm9ybSkge1xyXG4gIGNvbnN0IGlucHV0cyA9IEFycmF5LmZyb20oZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpKTtcclxuXHJcbiAgY29uc3QgaW5wdXRzRm9yVmFsaWRhdGUgPSBpbnB1dHMuZmlsdGVyKChpbnB1dCkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgIWlucHV0LmRpc2FibGVkICYmXHJcbiAgICAgIGlucHV0LnR5cGUgIT09ICdmaWxlJyAmJlxyXG4gICAgICBpbnB1dC50eXBlICE9PSAncmVzZXQnICYmXHJcbiAgICAgIGlucHV0LnR5cGUgIT09ICdzdWJtaXQnICYmXHJcbiAgICAgIGlucHV0LnR5cGUgIT09ICdidXR0b24nXHJcbiAgICApO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gaW5wdXRzRm9yVmFsaWRhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVJbnB1dEVycm9ycyhmb3JtKSB7XHJcbiAgY29uc3QgaW5wdXRzID0gZ2V0Rm9ybUlucHV0cyhmb3JtKTtcclxuXHJcbiAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBnZXRFcnJvckVsZW1lbnQoZm9ybSwgaW5wdXQpO1xyXG4gICAgaWYgKGVycm9yRWxlbWVudCkge1xyXG4gICAgICBlcnJvckVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRCdXR0b25TdGF0ZShidXR0b24sIGlzRm9ybVZhbGlkKSB7XHJcbiAgaWYgKGlzRm9ybVZhbGlkKSB7XHJcbiAgICBidXR0b24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xyXG4gICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodmFsaWRhdGlvbkNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKHZhbGlkYXRpb25Db25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2hvd0J1dHRvbkxvYWRpbmdFbGxpcHNpcyhidXR0b24sIHRleHQpIHtcclxuICBjb25zdCBzdWJtaXRCdXR0b25UZXh0ID0gYnV0dG9uLnF1ZXJ5U2VsZWN0b3Ioc3VibWl0QnV0dG9uVGV4dFNlbGVjdG9yKTtcclxuICBjb25zdCBsb2FkaW5nRWxsaXBzaXMgPSBidXR0b24ucXVlcnlTZWxlY3RvcihlbGxpcHNpc0NvbnRhaW5lclNlbGVjdG9yKTtcclxuICBzdWJtaXRCdXR0b25UZXh0LnRleHRDb250ZW50ID0gdGV4dDtcclxuICBsb2FkaW5nRWxsaXBzaXMuY2xhc3NMaXN0LmFkZChlbGxpcHNpc0NsYXNzKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVCdXR0b25Mb2FkaW5nRWxsaXBzaXMoYnV0dG9uLCB0ZXh0KSB7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uVGV4dCA9IGJ1dHRvbi5xdWVyeVNlbGVjdG9yKHN1Ym1pdEJ1dHRvblRleHRTZWxlY3Rvcik7XHJcbiAgY29uc3QgbG9hZGluZ0VsbGlwc2lzID0gYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoZWxsaXBzaXNDb250YWluZXJTZWxlY3Rvcik7XHJcbiAgc3VibWl0QnV0dG9uVGV4dC50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgbG9hZGluZ0VsbGlwc2lzLmNsYXNzTGlzdC5yZW1vdmUoZWxsaXBzaXNDbGFzcyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRQb3B1cEVsZW1lbnQoYnV0dG9uKSB7XHJcbiAgY29uc3QgcG9wdXBTZWxlY3RvciA9IGAuJHtidXR0b24uZGF0YXNldC5wb3B1cH1gO1xyXG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbG9hZEltYWdlKHVybCkge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgIGltZy5zcmMgPSB1cmw7XHJcbiAgICBpbWcub25lcnJvciA9ICgpID0+IHJlamVjdCh1cmwpO1xyXG4gICAgaW1nLm9ubG9hZCA9ICgpID0+IHJlc29sdmUodXJsKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpcm1TdWJtaXQoZm9ybSkge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHt9KTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHBvcHVwT3BlbmVkQ2xhc3MsXHJcbiAgcG9wdXBPcGVuZWRTZWxlY3RvcixcclxuICBwb3B1cENsb3NlQnRuQ2xhc3MsXHJcbiAgZm9ybVNlbGVjdG9yLFxyXG59IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XHJcblxyXG5mdW5jdGlvbiBvcGVuUG9wdXAocG9wdXApIHtcclxuICBwb3B1cC5jbGFzc0xpc3QuYWRkKHBvcHVwT3BlbmVkQ2xhc3MpO1xyXG4gIHNldFBvcHVwQ2xvc2VMaXN0ZW5lcnMoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VQb3B1cChwb3B1cCkge1xyXG4gIHBvcHVwLmNsYXNzTGlzdC5yZW1vdmUocG9wdXBPcGVuZWRDbGFzcyk7XHJcbiAgcmVtb3ZlUG9wdXBDbG9zZUxpc3RlbmVycygpO1xyXG59XHJcblxyXG5jb25zdCBoYW5kbGVQb3B1cENsb3NlQ2xpY2sgPSAoZXZ0KSA9PiB7XHJcbiAgY29uc3QgY2xhc3NMaXN0ID0gZXZ0LnRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgaWYgKFxyXG4gICAgY2xhc3NMaXN0LmNvbnRhaW5zKHBvcHVwQ2xvc2VCdG5DbGFzcykgfHxcclxuICAgIGNsYXNzTGlzdC5jb250YWlucyhwb3B1cE9wZW5lZENsYXNzKVxyXG4gICkge1xyXG4gICAgY29uc3Qgb3BlbmVkUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwT3BlbmVkU2VsZWN0b3IpO1xyXG4gICAgY2xvc2VQb3B1cChvcGVuZWRQb3B1cCk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlUG9wdXBDbG9zZUVzYyA9IChldnQpID0+IHtcclxuICBjb25zdCBvcGVuZWRQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBPcGVuZWRTZWxlY3Rvcik7XHJcblxyXG4gIGlmIChvcGVuZWRQb3B1cCAmJiBldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgY2xvc2VQb3B1cChvcGVuZWRQb3B1cCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZnVuY3Rpb24gc2V0UG9wdXBDbG9zZUxpc3RlbmVycygpIHtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVQb3B1cENsb3NlQ2xpY2spO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVQb3B1cENsb3NlRXNjKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlUG9wdXBDbG9zZUxpc3RlbmVycygpIHtcclxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVQb3B1cENsb3NlQ2xpY2spO1xyXG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVQb3B1cENsb3NlRXNjKTtcclxufVxyXG5cclxuLy8gPT09PT09PT09PT0gY29uZmlybSBkZWxldGUgcG9wdXBcclxuXHJcbmZ1bmN0aW9uIG9wZW5Db25maXJtUG9wdXAocG9wdXAsIGNvbGxiYWNrQ29uZmlybVN1Ym1pdCkge1xyXG4gIHBvcHVwLmNsYXNzTGlzdC5hZGQocG9wdXBPcGVuZWRDbGFzcyk7XHJcbiAgc2V0Q29uZmlybUNsb3NlTGlzdGVuZXJzKHBvcHVwLCBjb2xsYmFja0NvbmZpcm1TdWJtaXQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZUNvbmZpcm1Qb3B1cChwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KSB7XHJcbiAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShwb3B1cE9wZW5lZENsYXNzKTtcclxuICByZW1vdmVDb25maXJtQ2xvc2VMaXN0ZW5lcnMocG9wdXAsIGNvbGxiYWNrQ29uZmlybVN1Ym1pdCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldENvbmZpcm1DbG9zZUxpc3RlbmVycyhwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KSB7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2dCkgPT5cclxuICAgIGhhbmRsZUNvbmZpcm1Qb3B1cENsb3NlQ2xpY2soZXZ0LCBwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KVxyXG4gICk7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldnQpID0+XHJcbiAgICBoYW5kbGVDb25maXJtUG9wdXBDbG9zZUVzYyhldnQsIHBvcHVwLCBjb2xsYmFja0NvbmZpcm1TdWJtaXQpXHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlQ29uZmlybUNsb3NlTGlzdGVuZXJzKHBvcHVwLCBjb2xsYmFja0NvbmZpcm1TdWJtaXQpIHtcclxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoKSA9PlxyXG4gICAgaGFuZGxlQ29uZmlybVBvcHVwQ2xvc2VDbGljayhwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KVxyXG4gICk7XHJcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsICgpID0+XHJcbiAgICBoYW5kbGVDb25maXJtUG9wdXBDbG9zZUVzYyhwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KVxyXG4gICk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNvbmZpcm1Qb3B1cENsb3NlQ2xpY2soZXZ0LCBwb3B1cCwgY29sbGJhY2tDb25maXJtU3VibWl0KSB7XHJcbiAgY29uc3QgY2xhc3NMaXN0ID0gZXZ0LnRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgaWYgKFxyXG4gICAgY2xhc3NMaXN0LmNvbnRhaW5zKHBvcHVwQ2xvc2VCdG5DbGFzcykgfHxcclxuICAgIGNsYXNzTGlzdC5jb250YWlucyhwb3B1cE9wZW5lZENsYXNzKVxyXG4gICkge1xyXG4gICAgcG9wdXBcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKVxyXG4gICAgICAucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3VibWl0JywgY29sbGJhY2tDb25maXJtU3VibWl0KTtcclxuICAgIGNsb3NlQ29uZmlybVBvcHVwKHBvcHVwKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNvbmZpcm1Qb3B1cENsb3NlRXNjKGV2dCwgcG9wdXAsIGNvbGxiYWNrQ29uZmlybVN1Ym1pdCkge1xyXG4gIGlmIChwb3B1cCAmJiBldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgcG9wdXBcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKVxyXG4gICAgICAucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3VibWl0JywgY29sbGJhY2tDb25maXJtU3VibWl0KTtcclxuICAgIGNsb3NlQ29uZmlybVBvcHVwKHBvcHVwKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IG9wZW5Qb3B1cCwgY2xvc2VQb3B1cCwgb3BlbkNvbmZpcm1Qb3B1cCwgY2xvc2VDb25maXJtUG9wdXAgfTtcclxuIiwiaW1wb3J0IHtcclxuICBjYXJkVGVtcGxhdGUsXHJcbiAgY2FyZFBvcHVwSW1hZ2UsXHJcbiAgY2FyZFBvcHVwVGl0bGUsXHJcbiAgcG9wdXBDYXJkLFxyXG4gIGNhcmRTZWxlY3RvcixcclxuICBjYXJkSW1hZ2VTZWxlY3RvcixcclxuICBjYXJkVGl0bGVTZWxlY3RvcixcclxuICBjYXJkTGlrZVNlbGVjdG9yLFxyXG4gIGNhcmRMaWtlQWN0aXZlQ2xhc3MsXHJcbiAgY2FyZERlbGV0ZVNlbGVjdG9yLFxyXG4gIGNhcmRMaWtlV2l0aENvdW50Q2xhc3MsXHJcbiAgY2FyZExpa2VDb3VudFNlbGVjdG9yLFxyXG4gIGZvcm1Db25maXJtRGVsZXRlLFxyXG4gIHBvcHVwQ29uZmlybURlbGV0ZSxcclxuICBwaG90b0dyaWRJdGVtU2VsZWN0b3IsXHJcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcclxuaW1wb3J0IHtcclxuICBoaWRlQnV0dG9uTG9hZGluZ0VsbGlwc2lzLFxyXG4gIHNob3dCdXR0b25Mb2FkaW5nRWxsaXBzaXMsXHJcbn0gZnJvbSAnLi4vdXRpbHMvdXRpbHMuanMnO1xyXG5cclxuaW1wb3J0IHsgZGVsZXRlQ2FyZCwgdG9nZ2xlTGlrZSB9IGZyb20gJy4vYXBpLmpzJztcclxuaW1wb3J0IHsgdXNlcklkIH0gZnJvbSAnLi9pbmRleC5qcyc7XHJcblxyXG5pbXBvcnQgeyBjbG9zZUNvbmZpcm1Qb3B1cCwgb3BlbkNvbmZpcm1Qb3B1cCwgb3BlblBvcHVwIH0gZnJvbSAnLi9tb2RhbC5qcyc7XHJcblxyXG5mdW5jdGlvbiBpc093bmVyTGlrZWQoY2FyZCkge1xyXG4gIHJldHVybiBjYXJkLmxpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB1c2VySWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpc0hhc0xpa2VzKGNhcmQpIHtcclxuICByZXR1cm4gY2FyZC5saWtlcy5sZW5ndGggPiAwO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZUNhcmRFbGVtZW50KGNhcmQpIHtcclxuICBjb25zdCBsaXN0RWxlbWVudCA9IGNhcmRUZW1wbGF0ZVxyXG4gICAgLnF1ZXJ5U2VsZWN0b3IocGhvdG9HcmlkSXRlbVNlbGVjdG9yKVxyXG4gICAgLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbiAgbGlzdEVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWNhcmQtaWQnLCBjYXJkLl9pZCk7XHJcblxyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbGlzdEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkU2VsZWN0b3IpO1xyXG5cclxuICBjb25zdCBjYXJkSW1hZ2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNhcmRJbWFnZVNlbGVjdG9yKTtcclxuICBjYXJkSW1hZ2Uuc3JjID0gY2FyZC5saW5rO1xyXG4gIGNhcmRJbWFnZS5hbHQgPSBgJHtjYXJkLm5hbWV9LmA7XHJcbiAgY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkVGl0bGVTZWxlY3RvcikudGV4dENvbnRlbnQgPSBjYXJkLm5hbWU7XHJcblxyXG4gIC8vIGNhcmQgcG9wdXAgd2l0aCBpbWFnZSBsaXN0ZW5lclxyXG4gIGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcclxuICAgIGNvbnN0IGNhcmRJbWFnZSA9IGV2dC50YXJnZXQ7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGV2dC50YXJnZXQuY2xvc2VzdChjYXJkU2VsZWN0b3IpO1xyXG4gICAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkVGl0bGVTZWxlY3Rvcik7XHJcblxyXG4gICAgY2FyZFBvcHVwSW1hZ2Uuc3JjID0gY2FyZEltYWdlLnNyYztcclxuICAgIGNhcmRQb3B1cEltYWdlLmFsdCA9IGAke2NhcmRUaXRsZS50ZXh0Q29udGVudH0uYDtcclxuICAgIGNhcmRQb3B1cFRpdGxlLnRleHRDb250ZW50ID0gY2FyZFRpdGxlLnRleHRDb250ZW50O1xyXG5cclxuICAgIG9wZW5Qb3B1cChwb3B1cENhcmQpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBsaWtlIGJ1dHRvblxyXG4gIGNvbnN0IGNhcmRMaWtlQnRuID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkTGlrZVNlbGVjdG9yKTtcclxuICBjb25zdCBjYXJkTGlrZUNvdW50ID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkTGlrZUNvdW50U2VsZWN0b3IpO1xyXG4gIGNvbnN0IGNhcmREZWxldGVCdG4gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNhcmREZWxldGVTZWxlY3Rvcik7XHJcblxyXG4gIGZ1bmN0aW9uIHJlbmRlckxpa2VDb3VudChjYXJkKSB7XHJcbiAgICBjYXJkLmxpa2VzLmxlbmd0aCAhPT0gMFxyXG4gICAgICA/IChjYXJkTGlrZUNvdW50LnRleHRDb250ZW50ID0gY2FyZC5saWtlcy5sZW5ndGgpXHJcbiAgICAgIDogKGNhcmRMaWtlQ291bnQudGV4dENvbnRlbnQgPSAnJyk7XHJcbiAgfVxyXG5cclxuICBpZiAoaXNIYXNMaWtlcyhjYXJkKSkge1xyXG4gICAgcmVuZGVyTGlrZUNvdW50KGNhcmQpO1xyXG4gICAgY2FyZExpa2VCdG4uY2xhc3NMaXN0LmFkZChjYXJkTGlrZVdpdGhDb3VudENsYXNzKTtcclxuICB9XHJcblxyXG4gIGlzT3duZXJMaWtlZChjYXJkKSA/IGNhcmRMaWtlQnRuLmNsYXNzTGlzdC5hZGQoY2FyZExpa2VBY3RpdmVDbGFzcykgOiBudWxsO1xyXG5cclxuICBjb25zdCBoYW5kbGVMaWtlQ2xpY2sgPSAoZXZ0KSA9PiB7XHJcbiAgICB0b2dnbGVMaWtlKGNhcmQuX2lkLCBpc093bmVyTGlrZWQoY2FyZCkpXHJcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgY2FyZCA9IGRhdGE7XHJcbiAgICAgICAgY29uc3QgbGlrZUJ1dHRvbiA9IGV2dC50YXJnZXQ7XHJcbiAgICAgICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKGNhcmRMaWtlQWN0aXZlQ2xhc3MpO1xyXG5cclxuICAgICAgICBjYXJkLmxpa2VzLmxlbmd0aCAhPT0gMFxyXG4gICAgICAgICAgPyBsaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoY2FyZExpa2VXaXRoQ291bnRDbGFzcylcclxuICAgICAgICAgIDogbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKGNhcmRMaWtlV2l0aENvdW50Q2xhc3MpO1xyXG5cclxuICAgICAgICByZW5kZXJMaWtlQ291bnQoY2FyZCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vyci5zdGF0dXN9INC70LDQudC60LAg0LrQsNGA0YLQvtGH0LrQuDogJHtlcnIuc3RhdHVzVGV4dH1gKTtcclxuICAgICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY2FyZExpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVMaWtlQ2xpY2spO1xyXG5cclxuICAvLyBkZWxldGUgYnV0dG9uXHJcbiAgY29uc3QgaGFuZGxlQ29uZmlybURlbGV0ZVN1Ym1pdCA9IChldnQpID0+IHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGV2dC5zdWJtaXR0ZXI7XHJcbiAgICBjb25zdCBkZWxldGVkQ2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgW2RhdGEtY2FyZC1pZD1cIiR7Y2FyZC5faWR9XCJdYFxyXG4gICAgKTtcclxuICAgIHNob3dCdXR0b25Mb2FkaW5nRWxsaXBzaXMoc3VibWl0QnV0dG9uLCAn0KPQtNCw0LvQtdC90LjQtScpO1xyXG5cclxuICAgIGRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVkQ2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgICAgY2xvc2VDb25maXJtUG9wdXAocG9wdXBDb25maXJtRGVsZXRlLCBoYW5kbGVDb25maXJtRGVsZXRlU3VibWl0KTtcclxuICAgICAgICBoaWRlQnV0dG9uTG9hZGluZ0VsbGlwc2lzKHN1Ym1pdEJ1dHRvbiwgJ9CU0LAnKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgIGDQntGI0LjQsdC60LAgJHtlcnIuc3RhdHVzfSDRg9C00LDQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60Lg6ICR7ZXJyLnN0YXR1c1RleHR9YFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIC8vIGNoZWNrIGNhcmQgb3duZXIgPT09IGFjY291bnQgb3duZXIgdG8gZGlzcGxheSBkZWxldGUgYnV0dG9uXHJcbiAgY2FyZC5vd25lci5faWQgPT09IHVzZXJJZFxyXG4gICAgPyBjYXJkRGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIGZvcm1Db25maXJtRGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgICAnc3VibWl0JyxcclxuICAgICAgICAgIGhhbmRsZUNvbmZpcm1EZWxldGVTdWJtaXQsXHJcbiAgICAgICAgICB7IG9uY2U6IHRydWUgfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgb3BlbkNvbmZpcm1Qb3B1cChwb3B1cENvbmZpcm1EZWxldGUsIGhhbmRsZUNvbmZpcm1EZWxldGVTdWJtaXQpO1xyXG4gICAgICB9KVxyXG4gICAgOiBjYXJkRGVsZXRlQnRuLnJlbW92ZSgpO1xyXG5cclxuICByZXR1cm4gbGlzdEVsZW1lbnQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoY2FyZEVsZW1lbnQsIGNhcmRzQ29udGFpbmVyKSB7XHJcbiAgY2FyZHNDb250YWluZXIucHJlcGVuZChjYXJkRWxlbWVudCk7XHJcbn1cclxuXHJcbmV4cG9ydCB7IGdlbmVyYXRlQ2FyZEVsZW1lbnQsIHJlbmRlckNhcmQgfTtcclxuIiwiaW1wb3J0IHsgZXJyb3JUZW1wbGF0ZSB9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGdldEVycm9yRWxlbWVudCxcclxuICBnZXRGb3JtSW5wdXRzLFxyXG4gIHNldEJ1dHRvblN0YXRlLFxyXG59IGZyb20gJy4uL3V0aWxzL3V0aWxzLmpzJztcclxuXHJcbmltcG9ydCB7IHZhbGlkYXRpb25Db25maWcgfSBmcm9tICcuLi91dGlscy9jb25maWcuanMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvbkNvbmZpZykge1xyXG4gIGNvbnN0IGZvcm1zID0gQXJyYXkuZnJvbShcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodmFsaWRhdGlvbkNvbmZpZy5mb3JtVmFsaWRhdGVTZWxlY3RvcilcclxuICApO1xyXG4gIGZvcm1zLmZvckVhY2goKGZvcm0pID0+IHNldEZvcm1FdmVudExpc3RlbmVycyhmb3JtKSk7XHJcblxyXG4gIGZ1bmN0aW9uIHNob3dJbnB1dEVycm9yKGZvcm0sIGlucHV0LCBtZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBnZXRFcnJvckVsZW1lbnQoZm9ybSwgaW5wdXQpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gbWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHZhbGlkYXRpb25Db25maWcuZXJyb3JFbGVtZW50Q2xhc3NBY3RpdmUpO1xyXG5cclxuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodmFsaWRhdGlvbkNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgYCR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoaWRlSW5wdXRFcnJvcihmb3JtLCBpbnB1dCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZ2V0RXJyb3JFbGVtZW50KGZvcm0sIGlucHV0KTtcclxuXHJcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHZhbGlkYXRpb25Db25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGlucHV0LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScpO1xyXG5cclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHZhbGlkYXRpb25Db25maWcuZXJyb3JFbGVtZW50Q2xhc3NBY3RpdmUpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVGb3JtSW5wdXQoZm9ybSwgaW5wdXQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGlucHV0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcihcclxuICAgICAgdmFsaWRhdGlvbkNvbmZpZy5lcnJvckVsZW1lbnRTZWxlY3RvclxyXG4gICAgKTtcclxuXHJcbiAgICBpbnB1dC52YWxpZGl0eS5wYXR0ZXJuTWlzbWF0Y2hcclxuICAgICAgPyBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eShpbnB1dC5kYXRhc2V0LmVycm9yTWVzc2FnZSlcclxuICAgICAgOiBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XHJcblxyXG4gICAgaWYgKCFpbnB1dC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAvLyBpZiBubyBlcnJvciBlbGVtZW50IC0+IGNyZWF0ZSBlcnJvciBET00gbm9kZSBhbmQgdGhlbiBzaG93XHJcbiAgICAgIGlmICghZXJyb3JFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZ2VuZXJhdGVFcnJvckZvcklucHV0KGlucHV0KTtcclxuICAgICAgICBpbnB1dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlcnJvckVsZW1lbnQsIGlucHV0Lm5leHRTaWJsaW5nKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgc2hvd0lucHV0RXJyb3IoZm9ybSwgaW5wdXQsIGlucHV0LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChlcnJvckVsZW1lbnQpIHtcclxuICAgICAgICBoaWRlSW5wdXRFcnJvcihmb3JtLCBpbnB1dCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNldEZvcm1FdmVudExpc3RlbmVycyhmb3JtKSB7XHJcbiAgICBjb25zdCBpbnB1dHMgPSBnZXRGb3JtSW5wdXRzKGZvcm0pO1xyXG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZm9ybS5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICB2YWxpZGF0aW9uQ29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXHJcbiAgICApO1xyXG5cclxuICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICBoYW5kbGVGb3JtSW5wdXQoZm9ybSwgaW5wdXQpO1xyXG4gICAgICAgIHNldEJ1dHRvblN0YXRlKHN1Ym1pdEJ1dHRvbiwgaXNGb3JtVmFsaWQoZm9ybSkpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRm9ybVZhbGlkKGZvcm0pIHtcclxuICBjb25zdCBpbnB1dHMgPSBnZXRGb3JtSW5wdXRzKGZvcm0pO1xyXG4gIHJldHVybiBpbnB1dHMuZXZlcnkoKGlucHV0KSA9PiBpbnB1dC52YWxpZGl0eS52YWxpZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlRXJyb3JGb3JJbnB1dChpbnB1dCkge1xyXG4gIGNvbnN0IGVycm9yRWxlbWVudCA9IGVycm9yVGVtcGxhdGVcclxuICAgIC5xdWVyeVNlbGVjdG9yKHZhbGlkYXRpb25Db25maWcuZXJyb3JFbGVtZW50U2VsZWN0b3IpXHJcbiAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZChgJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuXHJcbiAgcmV0dXJuIGVycm9yRWxlbWVudDtcclxufVxyXG4iLCJpbXBvcnQgJy4uL3BhZ2VzL2luZGV4LmNzcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGFkZENhcmQsXHJcbiAgZ2V0Q2FyZHMsXHJcbiAgZ2V0VXNlckluZm8sXHJcbiAgc2V0VXNlckF2YXRhcixcclxuICBzZXRVc2VySW5mbyxcclxufSBmcm9tICcuL2FwaS5qcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGdldEZvcm1JbnB1dFZhbHVlcyxcclxuICByZW1vdmVJbnB1dEVycm9ycyxcclxuICBzZXRCdXR0b25TdGF0ZSxcclxuICBnZXRQb3B1cEVsZW1lbnQsXHJcbiAgbG9hZEltYWdlLFxyXG4gIHNob3dCdXR0b25Mb2FkaW5nRWxsaXBzaXMsXHJcbiAgaGlkZUJ1dHRvbkxvYWRpbmdFbGxpcHNpcyxcclxufSBmcm9tICcuLi91dGlscy91dGlscy5qcyc7XHJcblxyXG5pbXBvcnQgeyBvcGVuUG9wdXAsIGNsb3NlUG9wdXAgfSBmcm9tICcuL21vZGFsLmpzJztcclxuXHJcbmltcG9ydCB7IGdlbmVyYXRlQ2FyZEVsZW1lbnQsIHJlbmRlckNhcmQgfSBmcm9tICcuL2NhcmQuanMnO1xyXG5cclxuaW1wb3J0IHtcclxuICBwb3B1cEVkaXRQcm9maWxlLFxyXG4gIHBvcHVwRWRpdEF2YXRhcixcclxuICBwb3B1cEFkZENhcmQsXHJcbiAgcHJvZmlsZU5hbWUsXHJcbiAgcHJvZmlsZUFib3V0LFxyXG4gIHByb2ZpbGVBdmF0YXIsXHJcbiAgY2FyZHNDb250YWluZXIsXHJcbiAgYXZhdGFySW5wdXQsXHJcbiAgZm9ybUVkaXRQcm9maWxlLFxyXG4gIGZvcm1BZGRDYXJkLFxyXG4gIGZvcm1FZGl0QXZhdGFyLFxyXG4gIGJ0bk9wZW5Qb3B1cEVkaXRQcm9maWxlLFxyXG4gIG5hbWVJbnB1dCxcclxuICBhYm91dElucHV0LFxyXG4gIGJ0bk9wZW5Qb3B1cEFkZENhcmQsXHJcbiAgYXZhdGFyQ29udGFpbmVyLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yLFxyXG59IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XHJcblxyXG5pbXBvcnQgeyB2YWxpZGF0aW9uQ29uZmlnIH0gZnJvbSAnLi4vdXRpbHMvY29uZmlnLmpzJztcclxuXHJcbmltcG9ydCB7IGVuYWJsZVZhbGlkYXRpb24sIGlzRm9ybVZhbGlkIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XHJcblxyXG5leHBvcnQgbGV0IHVzZXJJZDtcclxuXHJcbmZ1bmN0aW9uIHJlbmRlckluaXRpYWxQYWdlKCkge1xyXG4gIGdldFVzZXJJbmZvKClcclxuICAgIC50aGVuKCh1c2VyKSA9PiB7XHJcbiAgICAgIHVwZGF0ZVVzZXJJbmZvKHVzZXIpO1xyXG4gICAgICByZW5kZXJJbml0aWFsQ2FyZHMoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICBg0J7RiNC40LHQutCwICR7ZXJyLnN0YXR1c30g0LfQsNCz0YDRg9C30LrQuCDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPOiAke2Vyci5zdGF0dXNUZXh0fWBcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVVc2VySW5mbyh1c2VyKSB7XHJcbiAgcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gdXNlci5hYm91dDtcclxuICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHVzZXIubmFtZTtcclxuICBwcm9maWxlQXZhdGFyLnNyYyA9IHVzZXIuYXZhdGFyO1xyXG5cclxuICB1c2VySWQgPSB1c2VyLl9pZDtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVuZGVySW5pdGlhbENhcmRzKCkge1xyXG4gIGdldENhcmRzKClcclxuICAgIC50aGVuKChjYXJkcykgPT4ge1xyXG4gICAgICBjYXJkcy5yZXZlcnNlKCkuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG4gICAgICAgIHJlbmRlckNhcmQoZ2VuZXJhdGVDYXJkRWxlbWVudChjYXJkKSwgY2FyZHNDb250YWluZXIpO1xyXG4gICAgICB9KTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyLnN0YXR1c30g0LfQsNCz0YDRg9C30LrQuCDQutCw0YDRgtC+0YfQtdC6OiAke2Vyci5zdGF0dXNUZXh0fWApO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09IEZvcm0gZXZlbnRzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmNvbnN0IGhhbmRsZUVkaXRQcm9maWxlU3VibWl0ID0gKGV2dCkgPT4ge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCBzdWJtaXRCdXR0b24gPSBldnQudGFyZ2V0LnF1ZXJ5U2VsZWN0b3Ioc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIHNob3dCdXR0b25Mb2FkaW5nRWxsaXBzaXMoc3VibWl0QnV0dG9uLCAn0KHQvtGF0YDQsNC90LXQvdC40LUnKTtcclxuXHJcbiAgY29uc3QgZm9ybSA9IGV2dC50YXJnZXQ7XHJcbiAgY29uc3QgeyBuYW1lLCBhYm91dCB9ID0gZ2V0Rm9ybUlucHV0VmFsdWVzKGZvcm0pO1xyXG5cclxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pXHJcbiAgICAudGhlbigodXNlcikgPT4ge1xyXG4gICAgICB1cGRhdGVVc2VySW5mbyh1c2VyKTtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cEVkaXRQcm9maWxlKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICBg0J7RiNC40LHQutCwICR7ZXJyLnN0YXR1c30g0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRjzogJHtlcnIuc3RhdHVzVGV4dH1gXHJcbiAgICAgICk7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBoaWRlQnV0dG9uTG9hZGluZ0VsbGlwc2lzKHN1Ym1pdEJ1dHRvbiwgJ9Ch0L7RhdGA0LDQvdC40YLRjCcpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVBZGRDYXJkU3VibWl0ID0gKGV2dCkgPT4ge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCBzdWJtaXRCdXR0b24gPSBldnQudGFyZ2V0LnF1ZXJ5U2VsZWN0b3Ioc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIHNob3dCdXR0b25Mb2FkaW5nRWxsaXBzaXMoc3VibWl0QnV0dG9uLCAn0KHQvtC30LTQsNC90LjQtScpO1xyXG5cclxuICBjb25zdCB7IG5hbWUsIGxpbmsgfSA9IGdldEZvcm1JbnB1dFZhbHVlcyhmb3JtQWRkQ2FyZCk7XHJcbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSlcclxuICAgIC50aGVuKChjYXJkKSA9PiB7XHJcbiAgICAgIGNvbnN0IG5ld0NhcmQgPSBnZW5lcmF0ZUNhcmRFbGVtZW50KGNhcmQpO1xyXG4gICAgICByZW5kZXJDYXJkKG5ld0NhcmQsIGNhcmRzQ29udGFpbmVyKTtcclxuICAgICAgZm9ybUFkZENhcmQucmVzZXQoKTtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cEFkZENhcmQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICAgIGDQntGI0LjQsdC60LAgJHtlcnIuc3RhdHVzfSDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4OiAke2Vyci5zdGF0dXNUZXh0fWBcclxuICAgICAgKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGhpZGVCdXR0b25Mb2FkaW5nRWxsaXBzaXMoc3VibWl0QnV0dG9uLCAn0KHQvtC30LTQsNGC0YwnKTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlRWRpdEF2YXRhclN1Ym1pdCA9IChldnQpID0+IHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZXZ0LnRhcmdldC5xdWVyeVNlbGVjdG9yKHN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICBzaG93QnV0dG9uTG9hZGluZ0VsbGlwc2lzKHN1Ym1pdEJ1dHRvbiwgJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Jyk7XHJcblxyXG4gIGxvYWRJbWFnZShhdmF0YXJJbnB1dC52YWx1ZSlcclxuICAgIC50aGVuKCh1cmwpID0+IHtcclxuICAgICAgc2V0VXNlckF2YXRhcih1cmwpXHJcbiAgICAgICAgLnRoZW4oKHVzZXIpID0+IHtcclxuICAgICAgICAgIHVwZGF0ZVVzZXJJbmZvKHVzZXIpO1xyXG4gICAgICAgICAgZm9ybUVkaXRBdmF0YXIucmVzZXQoKTtcclxuICAgICAgICAgIGNsb3NlUG9wdXAocG9wdXBFZGl0QXZhdGFyKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAgICAgYNCe0YjQuNCx0LrQsCDQt9Cw0LPRgNGD0LfQutC4INCw0LLQsNGC0LDRgNCwICR7ZXJyLnN0YXR1c306ICR7ZXJyLnN0YXR1c1RleHR9YFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKHVybCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhgaW1hZ2Ugbm90IGZvdW5kIGZvciB1cmwgJHt1cmx9YCk7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBoaWRlQnV0dG9uTG9hZGluZ0VsbGlwc2lzKHN1Ym1pdEJ1dHRvbiwgJ9Ch0L7RhdGA0LDQvdC40YLRjCcpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5mb3JtRWRpdFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgaGFuZGxlRWRpdFByb2ZpbGVTdWJtaXQpO1xyXG5mb3JtQWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBoYW5kbGVBZGRDYXJkU3VibWl0KTtcclxuZm9ybUVkaXRBdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgaGFuZGxlRWRpdEF2YXRhclN1Ym1pdCk7XHJcblxyXG4vLyA9PT09PT09PT09PT09PSBwb3B1cCBldmVudHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc3QgaGFuZGxlT3BlblBvcHVwV2l0aEZvcm0gPSAoZXZ0KSA9PiB7XHJcbiAgY29uc3QgcG9wdXAgPSBnZXRQb3B1cEVsZW1lbnQoZXZ0LnRhcmdldCk7XHJcbiAgY29uc3QgZm9ybSA9IHBvcHVwLnF1ZXJ5U2VsZWN0b3IodmFsaWRhdGlvbkNvbmZpZy5mb3JtU2VsZWN0b3IpO1xyXG4gIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IHBvcHVwLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICB2YWxpZGF0aW9uQ29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXHJcbiAgKTtcclxuXHJcbiAgcmVtb3ZlSW5wdXRFcnJvcnMoZm9ybSk7XHJcbiAgb3BlblBvcHVwKHBvcHVwKTtcclxuICBzZXRCdXR0b25TdGF0ZShzdWJtaXRCdXR0b24sIGlzRm9ybVZhbGlkKGZvcm0pKTtcclxufTtcclxuXHJcbmJ0bk9wZW5Qb3B1cEVkaXRQcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xyXG4gIGFib3V0SW5wdXQudmFsdWUgPSBwcm9maWxlQWJvdXQudGV4dENvbnRlbnQ7XHJcblxyXG4gIGhhbmRsZU9wZW5Qb3B1cFdpdGhGb3JtKGV2dCk7XHJcbn0pO1xyXG5cclxuYnRuT3BlblBvcHVwQWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU9wZW5Qb3B1cFdpdGhGb3JtKTtcclxuXHJcbmF2YXRhckNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU9wZW5Qb3B1cFdpdGhGb3JtKTtcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxucmVuZGVySW5pdGlhbFBhZ2UoKTtcclxuZW5hYmxlVmFsaWRhdGlvbih2YWxpZGF0aW9uQ29uZmlnKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///84\n")}},c=>{c(c.s=84)}]);